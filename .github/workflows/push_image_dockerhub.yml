name: Push Image to Dockerhub

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      BACKEND_NAME: sustainable-city-management-backend
      FRONTEND_NAME: sustainable-city-management-frontend
      ECS_CLUSTER: scm-project
      ECS_FRONTEND_SERVICE: brian_nginx
      ECS_BACKEND_SERVICE: brian_nginx
      ECS_FRONTED_TASK_DEFINITION: frontend_task_defination.json
      ECS_BACKEND_TASK_DEFINITION: backend_task_defination.json
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
    - uses: actions/checkout@v3
    - name: Docker Login
      run: |
        docker login -u ${{ env.DOCKER_USERNAME }} -p ${{ env.DOCKER_PASSWORD }}
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d--%H-%M-%S')"
    - name: Building Docker Images
      run: |
        echo "Building backend image"
        docker build ./SCM/Backend --file ./SCM/Backend/Dockerfile --tag ${{ env.DOCKER_USERNAME }}/${{ env.BACKEND_NAME }}:latest
        echo "Building frontend image"
        docker build ./SCM/Frontend --file ./SCM/Frontend/Dockerfile --tag ${{ env.DOCKER_USERNAME }}/${{ env.FRONTEND_NAME }}:latest
    - name: Pushing Docker Images
      run: |
        echo "pushing backend image"
        docker push ${{ env.DOCKER_USERNAME }}/${{ env.BACKEND_NAME }}:latest
        echo "pushing frontend image"
        docker push ${{ env.DOCKER_USERNAME }}/${{ env.FRONTEND_NAME }}:latest
    
    - name: Configure AWS credentials
      uses: aws-action/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Deploy new frontend ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with: 
        task-definition: ${{ env.ECS_FRONTED_TASK_DEFINITION }}
        service: ${{ env.ECS_FRONTEND_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true

    - name: Deploy new backend ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with: 
        task-definition: ${{ env.ECS_BACKEND_TASK_DEFINITION }}
        service: ${{ env.ECS_BACKEND_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true